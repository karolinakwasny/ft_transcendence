services:
  - name: nginx
    type: web
    env: docker
    dockerfilePath: ./nginx/Dockerfile
    envVars:
      - fromFile: .env
    disk:
      - name: media_data
        mountPath: /app/media
    healthCheckPath: /
    startCommand: ''
    autoDeploy: true
    domains:
      - ft_transcendence_kkeklk.com
    routes:
      - type: rewrite
        source: /static/*
        destination: /app/static/$1
    dependsOn:
      - django
      - react

  - name: react
    type: web
    env: docker
    dockerfilePath: ./frontend/Dockerfile
    envVars:
      - fromFile: .env
    dependsOn:
      - django

  - name: django
    type: web
    env: docker
    dockerfilePath: ./backend/Dockerfile
    startCommand: ./script.sh
    envVars:
      - fromFile: .env
      - key: POSTGRES_DB
        value: ${POSTGRES_DB}  # Replace with the actual database name
      - key: POSTGRES_USER
        value: ${POSTGRES_USER}
      - key: POSTGRES_PASSWORD
        value: ${POSTGRES_PASSWORD}
      - key: POSTGRES_HOST
        value: ${POSTGRES_HOST}  # This could be the Render URL for the database service
      - key: POSTGRES_PORT
        value: ${POSTGRES_PORT}
    disk:
      - name: static_data
        mountPath: /app/static
      - name: media_data
        mountPath: /app/media
    dependsOn:
      - react

# Render-managed PostgreSQL service setup (use Render's built-in PostgreSQL service)
  - name: postgresql
    type: postgres
    envVars:
      - fromFile: .env
    autoDeploy: true
    # Render will automatically create and manage this service for you

volumes:
  react_node_modules:
  media_data:
  static_data:

networks:
  transcend:
    name: transcend
    driver: bridge